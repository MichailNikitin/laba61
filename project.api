# control.h task.hpp
!control.cpp control.h graphics.h keys_n_colors.h #<#>
!main.cpp control.h graphics.h keys_n_colors.h task.hpp #<#>
!task.cpp cctype cerrno clocale cmath control.h cstdint cstdio cstdlib ctime ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error task.h time.h type_traits typeinfo wchar.h wctype.h #<#>
 struct@Control _type_ #<control.h>
COLOR_MAX #<control.h>
DEF #<control.h>
DOWN #<control.h>
Figure _type_ #<task.hpp>
Figure() #<task.hpp>
HEIGHT #<control.h>
PI : const double #<task.cpp>
Point _type_ #<task.hpp>
SIDE #<control.h>
SIZEBUTTON #<control.h>
SIZEBUTTONB #<control.h>
SIZEBUTTONS #<control.h>
SIZEWINDOW #<control.h>
WIDTH #<control.h>
control_values : enum #<control.h>
controls : Control[] #<control.cpp>
create_control(int i, int left, int top, const char* file_name) -> void #<control.cpp>
create_control(int, int, int, const char*) -> void #<control.h>
main() -> int #<main.cpp>
save() -> void #<control.h>
select_control() -> int #<control.h>
type_function : enum #<control.h>
	Control::left : int #<control.h>
	Control::top : int #<control.h>
	Control::right : int #<control.h>
	Control::bottom : int #<control.h>
	Figure:%count_vertex : int #<task.hpp>
	Figure:%points_fig : Point* #<task.hpp>
	Figure:%center_fig : Point #<task.hpp>
	Figure:%center : Point #<task.hpp>
	Figure:%angle_fig : double #<task.hpp>
	Figure:%factor_fig : double #<task.hpp>
	Figure::center() -> void #<task.hpp>
	Figure::movement(double x, double y) -> void #<task.hpp>
	Figure::spin(double angle) -> void #<task.hpp>
	Figure::scale(double factor) -> void #<task.hpp>
	Figure::draw() -> void #<task.hpp>
	Point::x : double #<task.hpp>
	Point::y : double #<task.hpp>
